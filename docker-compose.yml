services:
  postgres:
    container_name: svc.db
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=SVC,AUDIT
    networks:
      - postgres_network
    volumes:
      - db:/var/lib/postgresql
      - db_data:/var/lib/postgresql/data
      - ./scripts/add-svc-databases:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  pgadmin:
    container_name: svc.pgadmin
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=cfthody@hotmail.com
      - PGADMIN_DEFAULT_PASSWORD=Passw0rd1#
    networks:
      - postgres_network

  rabbit_mq:
    container_name: svc.rabbitmq
    image: rabbitmq:4.0-management
    command: rabbitmq-server
    hostname: rabbit_mq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq/log
     # - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
     # - ./definitions.json:/etc/rabbitmq/definitions.json
     # - ./scripts/rabbitmq-setup:/docker-entrypoint-initdb.d

  # aspire_dashboard:
  #   container_name: svc.aspire_dashboard
  #   image: mcr.microsoft.com/dotnet/aspire-dashboard:9.1
  #   restart: unless-stopped
  #   ports:
  #     - "18888:18888"
  #     - "4317:18889"
  #   environment:
  #   depends_on:
  #     - postgres
  #     - rabbit_mq

  # grafana:
  #   container_name: svc.grafana
  #   image: grafana/grafana-oss
  #   restart: unless-stopped
  #   ports:
  #     - "3001:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=Passw0rd1#
  #     - GF_AUTH_ANONYMOUS_ENABLED=true
  #     - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #     - ./datasource.yml:/etc/grafana/provisioning/datasources/datasources.yml

  
  # elasticsearch:
  #   container_name: svc.elasticsearch
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
  #   restart: unless-stopped
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   environment:
  #     - discovery.type=single-node
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   volumes:
  #     - elasticsearch_data:/usr/share/elasticsearch/data
  #     - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml

  maildev:
    container_name: svc.maildev
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"

volumes:
  db:
  db_data:
  db_multiple:
  rabbitmq_data:
  rabbitmq_logs:
  grafana_data:

networks:
  postgres_network:
    driver: bridge
